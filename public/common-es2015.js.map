{"version":3,"sources":["./src/app/delivery/delivery.service.ts","./src/app/shared/filter.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ApiLinkService } from '../shared/api-link.service';\nimport { AuthService } from '../guard/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeliveryService {\n\n  constructor(private http: HttpClient, private api: ApiLinkService, private auth: AuthService) { }\n\n  serverPath: string = this.api.srvLink;\n\n  headers = new HttpHeaders({\n    'Content-Type': \"application/json\",\n    'Authorization': this.auth.getLogged()\n  });\n\n  getAllDelivery() {\n    return this.http.get(this.api.server+\"delivery/all\", {headers: this.headers});\n  }\n\n  updatepaymentMode(data: any) {\n    return this.http.post(this.api.server+\"delivery/updatePaymentMode\", data, {headers: this.headers});\n  }\n\n  generateImageNewInvoice (data: any) {\n    return this.http.post(this.api.server+\"bill/uploadGeneratedBills\", data, {headers: this.headers});\n  }\n  moveToDelivery (data) {\n    return this.http.post(this.api.server+\"delivery/moveToDelivery\", data,  {headers: this.headers});\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n\n  today: any = new Date();\n  currentMonth: any = new Date();\n  lastTwo: any = new Date();\n  lastThree: any = new Date();\n  lastSix: any = new Date();\n  lastNine: any = new Date();\n  e =this.currentMonth.setMonth(this.today.getMonth() - 1);\n  a = this.lastTwo.setMonth(this.today.getMonth() - 2);\n  b: any = this.lastThree.setMonth(this.today.getMonth() - 3);\n  c: any = this.lastSix.setMonth(this.today.getMonth() - 6);\n  d: any = this.lastNine.setMonth(this.today.getMonth() - 9);\n\n  cOptions: any = {\n    items: 1,\n    dots: true,\n    nav: true,\n    lazyLoad: true,\n    autoplay: false,\n    loop: true,\n    autoHeight: false\n  }\n\n  menuOptions: any = {\n    dots: false,\n    nav: false,\n    lazyLoad: true,\n    autoplay: false,\n    loop: false,\n    autoHeight: false,\n     responsive:{\n        0:{\n            items:3\n        },\n        600:{\n            items:4\n        },\n        1000:{\n            items:5\n        }\n    }\n  }\n\n  monthFilter: any = [this.currentMonth.getTime(), this.lastTwo.getTime(), this.lastThree.getTime(), this.lastSix.getTime(), this.lastNine.getTime()];\n\n  constructor() { }\n\n\n  weekCalculator(mCount: number, m: number) {\n    const weeks=[];\n    for(let i = mCount+1; i >= 0; i--) {\n      let thisMon = new Date();\n\n      let a = thisMon.setMonth(m - i);\n\n      let month = thisMon.getMonth();\n      let year = thisMon.getFullYear();\n\n\n      const daysName = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n      const  lastDate = new Date(year, month + 1, 0);\n      let start: number=0;\n      let end: number;\n\n      for (let i = 1; i < lastDate.getDate()+1; i++) {\n        if (daysName[Number(new Date(year, month, i).getDay())] ==\"Sunday\" || i == lastDate.getDate()) {\n          end= i;\n          weeks.push({\n              start:new Date(year, month, start+1),\n              end:new Date(year, month, end)\n          });\n            start = i;\n        }\n      }\n    }\n    return weeks;\n  }\n\n  getWeeksStartAndEndInMonth(month:any, year:any) {\n    let weeks = [];\n    month = (month *30)/7;\n    for (let i=0; i< month; i++) {\n       // Days you want to subtract\n      let start;\n      if (weeks.length === 0) {\n         start = new Date();\n      } else {\n        start = new Date(weeks[weeks.length -1].end);\n      }\n      var end = new Date(start.getTime() - (7 * 24 * 60 * 60 * 1000));\n      weeks.push({start: start, end: end});\n    }\n    return weeks;\n  }\n\n  getDaysStartAndEndInMonth(day:any, year:any) {\n    let days = [];\n    day = day * 7;\n    for (let i=0; i< day; i++) {\n       // Days you want to subtract\n      let start;\n      if (days.length === 0) {\n         start = new Date();\n      } else {\n        start = new Date(days[days.length -1].end);\n      }\n      var end = new Date(start.getTime() - (1 * 24 * 60 * 60 * 1000));\n      days.push({start: start, end: end});\n    }\n    return days;\n  }\n\n  cleanPrice(amount: string) {\n    return parseInt(amount.replace(/[^a-zA-Z0-9]/g, '')) ;\n  }\n\n  filterByDate(billData: any, startDate: any, endDate: any): void {\n    let data: any = {list: [], price: 0};\n    console.log(billData);\n    //this.billList = this.billData.filter((bill: any) => new Date(bill.date).getTime() >= this.lastTwo.getTime() && new Date(bill.date).getTime() <= this.today.getTime());\n    data.list = billData.filter((bill: any) => new Date(bill.date).getTime() >= endDate && new Date(bill.date).getTime() <= startDate);\n  //  console.log(data.list);\n    if(data.list) {\n      data.list.forEach(bill => {\n        data.price += parseInt(bill.total.replace(/[^a-zA-Z0-9]/g, ''));\n      });\n      data.price = data.price / 100;\n    }\n\n    return data;\n  }\n\n  filterByDateCash(billData: any, startDate: any, endDate: any): void {\n   // console.log(billData);\n    let data: any = {list: [], price: 0};\n    //console.log(startDate);\n   // console.log(endDate);\n    //this.billList = this.billData.filter((bill: any) => new Date(bill.date).getTime() >= this.lastTwo.getTime() && new Date(bill.date).getTime() <= this.today.getTime());\n    console.log(billData);\n    data.list = billData.filter((bill: any) => new Date(bill.billDetails.date).getTime() >= endDate && new Date(bill.billDetails.date).getTime() <= startDate);\n    //console.log(data.list);\n    if(data.list) {\n      data.list.forEach(bill => {\n        data.price += parseInt(bill.billDetails.total.replace(/[^a-zA-Z0-9]/g, ''));\n      });\n      data.price = data.price;\n    }\n\n    return data;\n  }\n\n  filterByBillDate(billData: any, startDate: any, endDate: any): void {\n    let data: any = {list: [], price: 0};\n   // console.log(billData);\n    //this.billList = this.billData.filter((bill: any) => new Date(bill.date).getTime() >= this.lastTwo.getTime() && new Date(bill.date).getTime() <= this.today.getTime());\n    data.list = billData.filter((bill: any) => new Date(bill.billDetails.date).getTime() >= endDate && new Date(bill.billDetails.date).getTime() <= startDate);\n\n    if(data.list) {\n      data.list.forEach(bill => {\n        console.log(bill.billDetails.total);\n        data.price += parseInt(bill.billDetails.total.replace(/[^a-zA-Z0-9]/g, ''));\n      });\n      data.price = data.price;\n    }\n\n    return data;\n  }\n\n\n\n  filterByBillDatecash(billData: any, startDate: any, endDate: any): void {\n    console.log(billData);\n    let data: any = {list: [], price: 0};\n    data.list = billData.filter((bill: any) => new Date(bill.billDetails.date).getTime() >= startDate && new Date(bill.billDetails.date).getTime() <= endDate);\n    console.log(data.list);\n    if(data.list) {\n\n      data.list.forEach(bill => {\n        data.price += parseInt(bill.billDetails.total.replace(/[^a-zA-Z0-9]/g, ''));\n\n      });\n      data.price = data.price;\n    }\n     // console.log(data);\n    return data;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}